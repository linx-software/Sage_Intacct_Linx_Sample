{
  "Properties": [
    {
      "Id": "Data",
      "Type": "Compiled:Object",
      "ValueUsage": "RuntimeRead",
      "Value": {
        "Expression": "request",
        "CompiledExpression": "={0}",
        "Type": "Custom:01e2"
      },
      "ValueType": "Linx.CSharpExpression"
    },
    {
      "Id": "Encoding",
      "Type": "Compiled:Twenty57.Linx.Plugins.Xml.XmlWriter.Encoding, Twenty57.Linx.Plugins.Xml, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null",
      "ValueUsage": "DesignTime",
      "Value": "UTF8"
    },
    {
      "Id": "Root element name",
      "Type": "Compiled:String",
      "ValueUsage": "DesignTime",
      "Value": "request"
    },
    {
      "Id": "Transform XSLT",
      "Type": "Compiled:String",
      "ValueUsage": "RuntimeRead",
      "Value": "  <xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\r\n  <xsl:output omit-xml-declaration=\"no\" method=\"xml\" indent=\"yes\" encoding=\"UTF-8\"/>\r\n  <xsl:strip-space elements=\"*\"/>\r\n\r\n  <xsl:template match=\"node()[not(self::function)]|@*\">\r\n    <xsl:copy>\r\n       <xsl:apply-templates select=\"node()|@*\"/>\r\n    </xsl:copy>\r\n  </xsl:template>\r\n\r\n  <xsl:template match=\"function\">\r\n        <function controlid=\"\"><xsl:apply-templates select=\"@*|node()\" /></function>\r\n   </xsl:template>\r\n\r\n  <xsl:template match=\"request/operation/content/function/query/filter/like/*[position() = 1]\">\r\n        <field><xsl:apply-templates select=\"@*|node()\" /></field>\r\n   </xsl:template>\r\n\r\n  <xsl:template match=\"request/operation/content/function/query/filter/like/*[position() = 2]\">\r\n        <value><xsl:apply-templates select=\"@*|node()\" /></value>\r\n   </xsl:template>\r\n\r\n  <xsl:template match=\"request/operation/content/function/query/select/Item\">\r\n        <field><xsl:apply-templates select=\"@*|node()\" /></field>\r\n   </xsl:template>\r\n\r\n  <xsl:template match=\r\n     \"*[not(@*|*|comment()|processing-instruction()) \r\n     and normalize-space()=''\r\n     ]\"/>\r\n\r\n  </xsl:stylesheet>"
    }
  ],
  "Result": "Compiled:String"
}